#!/usr/bin/env bash
# Description:  OpenSSH LDAP AuthorizedKeys helper (for OpenSSH >=6.2).
# Author:       Lesovsky A.V. <lesovsky@gmail.com>
# Version:      0.2
# 
# Modified By mhope@adaptavist.com as below:
# * Attempt the use of StartTLS (-Z)
# * Remove SERVERGROUP check

### File managed with puppet ###
### Served by:        '<%= scope.lookupvar('::servername') %>'
### Module:           '<%= scope.to_hash['module_name'] %>'
### Template source:  '<%= template_source %>'

CONF='<%= @ldap_config_file %>'

# Sanity check.
if [ ! -f $CONF ]; then logger -t openssh-ldap-publickey "$CONF not found." ; exit 1; fi
if which ldapsearch &>/dev/null;
  then LDAPSEARCH=$(which ldapsearch)
  else logger -t openssh-ldap-publickey "ldapsearch not found." ; exit 1
fi

# Get param from config file.
BINDDN=$(sed -n "s,^binddn \(.*\)$,\1,p" $CONF)
BINDPW=$(sed -n "s,^bindpw \(.*\)$,\1,p" $CONF)
BASE=$(sed -n "s,^base \(.*\)$,\1,p" $CONF)
ACCOUNT_BASE=$(sed -n "s,^account_base \(.*\)$,\1,p" $CONF)
GROUP_BASE=$(sed -n "s,^group_base \(.*\)$,\1,p" $CONF)
ACCOUNT_FILTER=$(sed -n "s,^account_filter \(.*\)$,\1,p" $CONF)
PUBKEY_ATTR=$(sed -n "s,^pubkey_attr \(.*\)$,\1,p" $CONF)
USER=$1

# Check empty params, set defaults if empty parameters exists.
if [ -z "$BASE" ]; then logger -t openssh-ldap-publickey "base dn for search not specified." ; exit 1; fi
if [ -z "$ACCOUNT_BASE" ]; then ACCOUNT_BASE="$BASE"; fi
if [ -z "$GROUP_BASE" ]; then GROUP_BASE="$BASE"; fi
if [ -z "$ACCOUNT_FILTER" ]; then ACCOUNT_FILTER="objectClass=posixAccount"; fi
if [ -z "$PUBKEY_ATTR" ]; then PUBKEY_ATTR=sshPublicKey; fi

# Set credentials params. Use noanonymous access if its specified through binddn and bindpw
if [ ! -z "$BINDDN" -a ! -z "$BINDPW" ]
  then CREDENTIALS="-D $BINDDN -w $BINDPW"
  else CREDENTIALS=""
fi

# Find account pubkey attr
<% if @ldap_starttls == true or @ldap_starttls == 'true' %>
$LDAPSEARCH -Z -o ldif-wrap=no -LLL $CREDENTIALS -b "$ACCOUNT_BASE" "(&(${ACCOUNT_FILTER})(uid=${USER}))" $PUBKEY_ATTR \
 | sed -n "s,^$PUBKEY_ATTR: \(.*\)$,\1,p"
<% else %>
$LDAPSEARCH -o ldif-wrap=no -LLL $CREDENTIALS -b "$ACCOUNT_BASE" "(&(${ACCOUNT_FILTER})(uid=${USER}))" $PUBKEY_ATTR \
 | sed -n "s,^$PUBKEY_ATTR: \(.*\)$,\1,p"
<% end %>
